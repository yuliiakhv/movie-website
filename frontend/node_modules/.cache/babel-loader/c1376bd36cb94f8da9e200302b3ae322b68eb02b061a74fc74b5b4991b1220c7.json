{"ast":null,"code":"var _jsxFileName = \"W:\\\\xampp\\\\htdocs\\\\movie-website\\\\frontend\\\\src\\\\components\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paginator, Container, PageGroup, usePaginator } from 'chakra-paginator';\nimport { Grid } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [moviesTotal, setMoviesTotal] = useState(undefined);\n  const [movies, setMovies] = useState([]);\n\n  // Getting data from db\n\n  const fetchMovies = async (pageSize, offset) => {\n    const respond = await fetch(`http://localhost/movie-website/?limit=${pageSize}&offset=${offset}`);\n    return await respond.json();\n  };\n  useEffect(() => {\n    let pageSize = 10;\n    let offset = 0;\n    fetchMovies(pageSize, offset).then(movies => {\n      setMoviesTotal(movies.count);\n      setMovies(movies.movies);\n      console.log(movies.movies);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paginator, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: '(4, 1fr)',\n      gap: 6,\n      children: movies.map(function (id, title, body, userId, image) {\n        return /*#__PURE__*/_jsxDEV(PostList, {}, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      align: 'center',\n      justify: \"space-between\",\n      w: 'full',\n      marginTop: \"50px\",\n      children: /*#__PURE__*/_jsxDEV(PageGroup, {\n        isInline: true,\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"364aDX3RdqqJwjnaCbrpdQRuaJU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Paginator","Container","PageGroup","usePaginator","Grid","jsxDEV","_jsxDEV","Home","_s","moviesTotal","setMoviesTotal","undefined","movies","setMovies","fetchMovies","pageSize","offset","respond","fetch","json","then","count","console","log","children","templateColumns","gap","map","id","title","body","userId","image","PostList","fileName","_jsxFileName","lineNumber","columnNumber","align","justify","w","marginTop","isInline","_c","$RefreshReg$"],"sources":["W:/xampp/htdocs/movie-website/frontend/src/components/pages/Home.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Paginator, Container, PageGroup, usePaginator } from 'chakra-paginator';\r\nimport { Grid } from '@chakra-ui/react';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [moviesTotal, setMoviesTotal] = useState(undefined);\r\n    const [movies, setMovies] = useState([]);\r\n\r\n   // Getting data from db\r\n   \r\n   const fetchMovies = async (pageSize, offset) => {\r\n       const respond = await fetch(`http://localhost/movie-website/?limit=${pageSize}&offset=${offset}`);\r\n\r\n       return await respond.json();\r\n   }\r\n    \r\n    useEffect(() => {\r\n\r\n        let pageSize = 10;\r\n        let offset = 0;\r\n\r\n        fetchMovies(pageSize, offset).then((movies) => {\r\n           setMoviesTotal(movies.count);\r\n           setMovies(movies.movies);\r\n           console.log(movies.movies);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Paginator>\r\n            <Grid templateColumns={'(4, 1fr)'} gap={6}>\r\n                {movies.map(function(id, title, body, userId, image){\r\n                    return <PostList key={id}></PostList>\r\n                })}\r\n            </Grid>\r\n            <Container align={'center'} justify=\"space-between\" w={'full'} marginTop=\"50px\">\r\n                <PageGroup isInline align=\"center\"></PageGroup>\r\n            </Container>\r\n        </Paginator>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,YAAY,QAAQ,kBAAkB;AAChF,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACa,SAAS,CAAC;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEzC;;EAEA,MAAMgB,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;IAC5C,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,yCAAwCH,QAAS,WAAUC,MAAO,EAAC,CAAC;IAEjG,OAAO,MAAMC,OAAO,CAACE,IAAI,CAAC,CAAC;EAC/B,CAAC;EAEApB,SAAS,CAAC,MAAM;IAEZ,IAAIgB,QAAQ,GAAG,EAAE;IACjB,IAAIC,MAAM,GAAG,CAAC;IAEdF,WAAW,CAACC,QAAQ,EAAEC,MAAM,CAAC,CAACI,IAAI,CAAER,MAAM,IAAK;MAC5CF,cAAc,CAACE,MAAM,CAACS,KAAK,CAAC;MAC5BR,SAAS,CAACD,MAAM,CAACA,MAAM,CAAC;MACxBU,OAAO,CAACC,GAAG,CAACX,MAAM,CAACA,MAAM,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACN,SAAS;IAAAwB,QAAA,gBACNlB,OAAA,CAACF,IAAI;MAACqB,eAAe,EAAE,UAAW;MAACC,GAAG,EAAE,CAAE;MAAAF,QAAA,EACrCZ,MAAM,CAACe,GAAG,CAAC,UAASC,EAAE,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAC;QAChD,oBAAO1B,OAAA,CAAC2B,QAAQ,MAAML,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MACzC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACP/B,OAAA,CAACL,SAAS;MAACqC,KAAK,EAAE,QAAS;MAACC,OAAO,EAAC,eAAe;MAACC,CAAC,EAAE,MAAO;MAACC,SAAS,EAAC,MAAM;MAAAjB,QAAA,eAC3ElB,OAAA,CAACJ,SAAS;QAACwC,QAAQ;QAACJ,KAAK,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEpB;AAAC7B,EAAA,CArCuBD,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}