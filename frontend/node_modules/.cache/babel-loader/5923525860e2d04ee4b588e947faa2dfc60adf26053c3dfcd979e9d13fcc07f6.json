{"ast":null,"code":"var _jsxFileName = \"W:\\\\xampp\\\\htdocs\\\\movie-website\\\\frontend\\\\src\\\\components\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paginator, Container, PageGroup, usePaginator } from 'chakra-paginator';\nimport { Grid } from '@chakra-ui/react';\nimport MovieList from '../movieComponents/MovieList';\nimport { Box, Badge } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [moviesTotal, setMoviesTotal] = useState(undefined);\n  const [movies, setMovies] = useState([]);\n  const {\n    pagesQuantity,\n    offset,\n    currentPage,\n    setCurrentPage,\n    pageSize\n  } = usePaginator({\n    total: moviesTotal,\n    initialState: {\n      pageSize: 10,\n      isDisabled: false,\n      currentPage: 1\n    }\n  });\n  const idleStyles = {};\n  con;\n\n  // Getting data from db\n\n  const fetchMovies = async (pageSize, offset) => {\n    const respond = await fetch(`http://localhost/movie-website/?limit=${pageSize}&offset=${offset}`);\n    return await respond.json();\n  };\n  useEffect(() => {\n    let pageSize = 10;\n    let offset = 0;\n    fetchMovies(pageSize, offset).then(movies => {\n      setMoviesTotal(movies.count);\n      setMovies(movies.movies);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paginator, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"repeat(4, 1fr)\",\n      gap: 6,\n      children: movies.map(function ({\n        id,\n        title,\n        body,\n        userId,\n        image\n      }) {\n        return /*#__PURE__*/_jsxDEV(MovieList, {\n          id: id,\n          title: title,\n          body: body,\n          userId: userId,\n          image: image\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      align: \"center\",\n      justify: \"space-between\",\n      w: \"full\",\n      p: 4,\n      marginTop: \"50px\",\n      children: /*#__PURE__*/_jsxDEV(PageGroup, {\n        isInline: true,\n        align: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n}\n_s(Home, \"hoxUt1SZ5tJsvApo8iKHmJgvDe8=\", false, function () {\n  return [usePaginator];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Paginator","Container","PageGroup","usePaginator","Grid","MovieList","Box","Badge","jsxDEV","_jsxDEV","Home","_s","moviesTotal","setMoviesTotal","undefined","movies","setMovies","pagesQuantity","offset","currentPage","setCurrentPage","pageSize","total","initialState","isDisabled","idleStyles","con","fetchMovies","respond","fetch","json","then","count","children","templateColumns","gap","map","id","title","body","userId","image","fileName","_jsxFileName","lineNumber","columnNumber","align","justify","w","p","marginTop","isInline","_c","$RefreshReg$"],"sources":["W:/xampp/htdocs/movie-website/frontend/src/components/pages/Home.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Paginator, Container, PageGroup, usePaginator } from 'chakra-paginator';\r\nimport { Grid } from '@chakra-ui/react';\r\nimport MovieList from '../movieComponents/MovieList';\r\nimport { Box, Badge } from '@chakra-ui/react';\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const [moviesTotal, setMoviesTotal] = useState(undefined);\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const {\r\n        pagesQuantity,\r\n        offset,\r\n        currentPage,\r\n        setCurrentPage,\r\n        pageSize,\r\n    } = usePaginator({\r\n        total: moviesTotal,\r\n        initialState: {\r\n            pageSize: 10,\r\n            isDisabled: false,\r\n            currentPage: 1\r\n        }\r\n    });\r\n\r\n    const idleStyles = {};\r\n\r\n    con\r\n\r\n   // Getting data from db\r\n   \r\n   const fetchMovies = async (pageSize, offset) => {\r\n       const respond = await fetch(`http://localhost/movie-website/?limit=${pageSize}&offset=${offset}`);\r\n\r\n       return await respond.json();\r\n   }\r\n    \r\n    useEffect(() => {\r\n\r\n        let pageSize = 10;\r\n        let offset = 0;\r\n\r\n        fetchMovies(pageSize, offset).then((movies) => {\r\n           setMoviesTotal(movies.count);\r\n           setMovies(movies.movies);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n            <Paginator>\r\n            <Grid templateColumns='repeat(4, 1fr)' gap={6}>\r\n                {movies.map(function({id, title, body, userId, image}){\r\n                    return <MovieList key={id} id={id} title={title} body={body}\r\n                    userId={userId} image={image}/>\r\n                })}\r\n            </Grid>\r\n            <Container align='center' justify=\"space-between\" w='full' p={4} marginTop=\"50px\">\r\n                <PageGroup isInline align=\"center\"></PageGroup>\r\n            </Container>\r\n        </Paginator>\r\n        \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}